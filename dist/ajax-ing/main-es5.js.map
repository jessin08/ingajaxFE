{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/product-details/product-details.component.ts","webpack:///src/app/product-details/product-details.component.html","webpack:///src/app/services/authentication-serve.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","authenticationService","currentUser","subscribe","user","products","isLoggedIn","LoginComponent","formBuilder","route","router","loading","submitted","error","currentUserValue","navigate","loginForm","group","username","required","password","returnUrl","snapshot","queryParams","invalid","login","f","value","pipe","data","controls","onSubmit","ProductDetailsComponent","AuthenticationServeService","http","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","post","loginApiUrl","userDetails","setItem","userToken","stringify","next","productDetails","removeItem","providedIn","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {ProductDetailsComponent} from './product-details/product-details.component'\nimport {AuthGuard} from './helpers/auth.guard'\n\nconst routes: Routes = [\n  { path: '', component: ProductDetailsComponent},\n    { path: 'login', component: LoginComponent },\n\n    // otherwise redirect to product Details\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n  \n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ajax-ing';\n}\n","\n<!-- main app container -->\n<div class=\"container\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    ProductDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationServeService} from '../services/authentication-serve.service'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isLoggedIn:boolean;\n  constructor(private authenticationService:AuthenticationServeService) { }\n\n  ngOnInit(): void {\n    this.authenticationService.currentUser.subscribe((user)=>{\n      if(user.products){\n        this.isLoggedIn = true;\n      }\n    });\n  }\n\n  logout(){\n    \n  }\n\n}\n","<!-- nav -->\n<nav class=\"navbar navbar-expand \" >\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/images/logo.png\" alt=\"ing logo\">\n        </a>\n        <a class=\"nav-item nav-link\" *ngIf=\"isLoggedIn\" (click)=logout()>Logout</a>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationServeService } from '../services/authentication-serve.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationServeService\n  ) { \n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) { \n      this.router.navigate(['/']);\n  }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n  });\n\n  // get return url from route parameters or default to '/'\n  this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n   // convenience getter for easy access to form fields\n   get f() { return this.loginForm.controls; }\n\n   onSubmit() {\n       this.submitted = true;\n\n       // stop here if form is invalid\n       if (this.loginForm.invalid) {\n           return;\n       }\n\n       this.loading = true;\n       this.authenticationService.login(this.f.username.value, this.f.password.value)\n           .pipe(first())\n           .subscribe(\n               data => {\n                   this.router.navigate([this.returnUrl]);\n               },\n               error => {\n                   this.error = error;\n                   this.loading = false;\n               });\n   }\n\n}\n","\n\n<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Login\n            </button>\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-details works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport {LoginResponse, ProductDetails} from '../models/loginResponse'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationServeService {\n  private currentUserSubject: BehaviorSubject<ProductDetails>;\n  public currentUser: Observable<ProductDetails>;\n\n  constructor(private http:HttpClient) {\n      this.currentUserSubject = new BehaviorSubject<ProductDetails>(JSON.parse(localStorage.getItem('currentUser')));\n      this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): ProductDetails {\n      return this.currentUserSubject.value;\n  }\n\n  login(username: string, password: string) {\n      return this.http.post<any>(`${environment.loginApiUrl}`, { username, password })\n          .pipe(map((userDetails:LoginResponse) => {\n              // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\n              // userDetails.authdata = window.btoa(username + ':' + password);\n              localStorage.setItem('token',userDetails.userToken);\n              localStorage.setItem('currentUser', JSON.stringify(userDetails));\n              this.currentUserSubject.next(userDetails.productDetails);\n              return userDetails;\n          }));\n  }\n\n  logout() {\n      // remove user from local storage to log user out\n      localStorage.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  loginApiUrl:'http://google.com/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}